[alias]
        l = log --graph --pretty=format:'%Cred%h%Creset %C(bold blue)<%<(18)%an>%Creset %s %Cgreen(%cr) %C(yellow)%d%Creset' -n15
        ll = log --graph --pretty=format:'%Cred%h%Creset %C(bold blue)<%<(18)%an>%Creset %s %Cgreen(%cr) %C(yellow)%d%Creset'
        lns = log --graph --pretty=format:'%Cred%h%Creset %C(bold blue)<%<(18)%an>%Creset %s %Cgreen(%cr) %C(yellow)%d%Creset' -n15 --name-status
        tail = log --graph --pretty=format:'%Cred%h%Creset %C(bold blue)<%<(18)%an>%Creset %s %Cgreen(%cr) %C(yellow)%d%Creset' --max-parents=0
        s = status
        ss = status -s
        ssi = status -s --ignored
        si = status --ignored
        sh = show --color
        shn = show --color --name-only
        shns = show --color --name-status
        t = tag -l -n1
        b = branch -vv --color
        ba = branch -vv --color -a
        d = diff --color
        dn = diff --color --name-only
        dns = diff --color --name-status
        d0 = diff --color -U0
        dd = diff --color -w
        ds = diff --color --staged
        cc = reset --hard HEAD
        ccc = !git reset --hard HEAD && git clean -dxf
        p = pull --rebase
        co = checkout
        ca = commit --amend
        dw = diff -w --word-diff-regex=[^[:space:]] -B
        shw = show -w --word-diff-regex=[^[:space:]] -B
        update = !git fetch --prune --all && git fetch --prune --all --tags
        update-all = "!for arg in $(git branch | sed \"s/.* //\"); do printf \"========== \"; git checkout $arg >/dev/null; git pull --rebase; done"
        permission-reset = !git diff -p -R --no-color | grep -E \"^(diff|(old|new) mode)\" --color=never | git apply
        check-whitespace = !git diff-tree --check $(git hash-object -t tree /dev/null) HEAD
        diff-patch = !git d $(printf \"%s..%s\" $(git reflog -n2 | cut -f1 -d\" \"))

